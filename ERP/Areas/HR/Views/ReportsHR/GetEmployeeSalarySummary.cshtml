@using System.Data;
@using System.Collections.Generic;
@model DataSet;
@{
    ViewData["Title"] = "Employee Salary Summary";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}
@{
    List<string> strForRow = new List<string>();
    DateTime date = ViewBag.MonthYear;
    //string monthyear = string.Concat(date.Year + "-" + date.Month);
    string monthyear = date.ToString("yyyy-MM");
    int? month = date.Month;
    int? year = date.Year;
    int? empCatId = ViewBag.EmployeeCategoryID;
    int? companyID = ViewBag.CompanyID;
    int? employmentTypeId = ViewBag.EmploymentTypeID;
}

<div class="container" id="employeeSalalrySummary">
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12 mx-auto">
            <div class="card border-0 shadow rounded-3">
                <div class="card-body">

                    <div class="col-sm-12 col-md-6 col-lg-6">
                        <div class="page-breadcrumb align-items-center">
                            <div class="p-2">
                                <nav aria-label="breadcrumb">
                                    <ol class="breadcrumb mb-0 p-0">
                                        <li class="breadcrumb-item">
                                            <a asp-area="HR" asp-controller="ReportsHR" asp-action="GetEmployeeSalarySummary"><i class="bx bx-home-alt"></i></a>
                                        </li>
                                        <li class="breadcrumb-item active" aria-current="page">Employee Salary Process and View Summary </li>
                                    </ol>
                                </nav>
                            </div>
                        </div>
                    </div>


                    <hr />

                    <div class="row mb-1">
                        <label class="col-3 col-form-label">Select Month & Year</label>
                        <div class="col-3">
                            <input type="month" class="form-control" id="month" value="@monthyear">
                        </div>
                        <label for="" class="col-sm-3 col-form-label ">Company:</label>
                        <div class="col-sm-3">
                            <select class="form-select" asp-for="@companyID" id="CompanyID" name="CompanyID" asp-items="@EmployeeExtension.GetAllCompanyAsync()">
                                <option value="">Select Company</option>
                            </select>
                        </div>


                    </div>

                    <div class="row mb-1">
                        <label class="col-3 col-form-label">Employee Category</label>
                        <div class="col-3">
                            <select class="form-control" id="EmployeeCategoryID" name="EmployeeCategoryID" asp-items="@EmployeeExtension.GetAllEmployeeCategoryMaster()" asp-for="@empCatId">
                                <option value="">Select Category</option>
                            </select>
                        </div>
                        <label class="col-sm-3 col-form-label">Search Employee</label>
                        <div class="col-sm-3" id="idForDropdown">
                            <input type="hidden" id="EmployeeID" class="form-control" />
                            <input type="text" class="form-control bs-autocomplete" id="employeeText" name="EmployeeName" placeholder="Enter Searching text." value="@ViewBag.EmployeeID">
                        </div>

                    </div>

                    <div class="row mb-1">
                        <label for="" class="col-sm-3 col-form-label ">Employment Type:</label>
                        <div class="col-sm-3">
                            <select class="form-select" asp-for="@employmentTypeId" id="EmploymentTypeID" name="EmploymentTypeID" asp-items="@EmployeeExtension.GetAllEmploymentType()">
                                <option value="">Select Employment Type</option>
                            </select>
                        </div>
                    </div>

                    <div class="text-end mb-3">
                        <input type="button" value="Run Salary Process" class="btn btn-outline-primary px-5 btn-sm" onclick="fnSearchEmpSal(1)" />

                        <input type="button" value="Export to excel" class="btn btn-outline-primary px-5 btn-sm" onclick="fnSearchEmpSal(true)" />

                        @*<button id="btnSearchEmployeePresent" type="button" onclick="fnSearchEmpSal(false)" class="btn btn-outline-primary px-5 btn-sm">Search</button>*@
                    </div>
                    <div id="EmployeeSummaryTable">
                        @if (Model != null)
                        {
                            if (Model.Tables.Count > 0 && Model.Tables[0].Rows.Count > 0)
                            {
                                <div class="row" style="overflow:auto; height:auto; width:100%;">
                                    <table class="table table-striped table-hover table-bordered" style="white-space: nowrap; font-size:inherit !important;">
                                        @* style="display:block; overflow: auto; white-space: nowrap;" *@
                                        <thead style="position: sticky; top: 0; background-color:#e9ecf8; color:black; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                                            <tr>
                                                <th>Verified</th>@* Added by Dravesh *@
                                                <th>Edit</th>@* Added by Dravesh *@
                                                <th>Print</th>@* Added by Rahul *@
                                                @foreach (DataColumn dataColumn in Model.Tables[0].Columns)
                                                {
                                                    if (dataColumn.ColumnName.ToString() != "EmployeeID")
                                                    {
                                                        strForRow.Add(dataColumn.ToString());
                                                        <th>@dataColumn.ToString()</th>
                                                    }
                                                }
                                            </tr>
                                        </thead>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            var test = row;
                                            <tr>
                                                <td class="text-center">
                                                    @* <a asp-area="HR" asp-controller="ReportsHR" asp-action="Verified" asp-route-verifiedId="@row[0].ToString()"> *@
                                                    <a type="button" onclick="fnVerifySalary(this)" data-empId="@row[1].ToInt()">
                                                        @if (row[0].ToString().Equals("1"))
                                                        {
                                                            <iconify-icon icon="material-symbols:verified-outline" class="text-success" style="font-size:20px" disabled></iconify-icon>
                                                        }
                                                        else
                                                        {
                                                            <iconify-icon icon="material-symbols:verified-outline" class="text-danger" style="font-size:20px"></iconify-icon>
                                                        }
                                                        @*<iconify-icon icon="material-symbols:verified-outline" class="text-success" style="font-size:20px"></iconify-icon>*@
                                                    </a>

                                                </td>@* Added by Dravesh *@
                                                <td>
                                                    <a data-editId="@row[1].ToInt()" data-month="@month" data-year="@year" data-companyId="@companyID" data-employeeCategoryId="@empCatId" onclick="fnOpenNewEditTab(this)" style="cursor:pointer;color: #37569d;"><iconify-icon icon="material-symbols:edit-note-sharp" style="font-size:20px"></iconify-icon></a>
                                                   @*  @if (row[0].ToString().Equals("1"))
                                                    { *@
                                                      @*   <a asp-area="HR" asp-controller="ReportsHR" asp-action="Edit" asp-route-editId="@row[1].ToInt()" asp-route-month="@month" asp-route-year="@year" asp-route-companyId="@companyID" asp-route-employeeCategoryId="@empCatId" style="pointer-events: none"><iconify-icon icon="material-symbols:edit-note-sharp" style="font-size:20px"></iconify-icon></a> *@
                                                        @* <a><iconify-icon icon="material-symbols:edit-note-sharp" style="font-size:20px"></iconify-icon></a> *@@* 
                                                    }
                                                    else
                                                    { 
                                                        <a asp-area="HR" asp-controller="ReportsHR" asp-action="Edit" asp-route-editId="@row[1].ToInt()" asp-route-month="@month" asp-route-year="@year" asp-route-companyId="@companyID" asp-route-employeeCategoryId="@empCatId"><iconify-icon icon="material-symbols:edit-note-sharp" style="font-size:20px"></iconify-icon></a>
                                                    } *@
                                                    @*<a asp-area="HR" asp-controller="ReportsHR" asp-action="Edit" asp-route-editId="@row[1].ToInt()" asp-route-month="@month" asp-route-year="@year" asp-route-companyId="@companyID" asp-route-employeeCategoryId="@empCatId"><iconify-icon icon="material-symbols:edit-note-sharp" style="font-size:20px"></iconify-icon></a>*@
                                                </td>@* Added by Dravesh *@
                                                <td>
                                                    <a onclick="fnPrintSalarySleep(this)" href="javascript:void(0)" data-id="@row[1].ToInt()" data-month="@month" data-year="@year" data-company="@companyID" data-category="@empCatId" style="font-size:20px"><iconify-icon icon='arcticons:mobile-print'></iconify-icon></a>
                                                </td>@* Added by Rahul *@
                                                @foreach (string timeRow in strForRow)
                                                {
                                                    if (timeRow.ToString() != "EmployeeID")
                                                    {
                                                        @if (!string.IsNullOrEmpty(row[timeRow].ToString()))
                                                        {
                                                            <td>@row[timeRow]</td>
                                                        }
                                                        else
                                                        {
                                                            <td>-</td>
                                                        }

                                                    }
                                                }
                                            </tr>
                                        }
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="text-center">
                                    <h1><iconify-icon icon="mdi:text-box-remove-outline" style="color: #37569d;" width="100"></iconify-icon></h1>
                                    <h3 style="color: red;">No Data Found</h3>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center">
                                <h1><iconify-icon icon="mdi:text-box-remove-outline" style="color: #37569d;" width="100"></iconify-icon></h1>
                                <h3 style="color: red;">No Data Found</h3>
                            </div>
                        }
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


@await Html.PartialAsync("_ValidationScriptsPartial")
<script type="text/javascript">
    function fnSearchEmpSal(obj) {

        const currentDate = new Date();
        const years = currentDate.getFullYear();
        const months = String(currentDate.getMonth() + 1).padStart(2, '0');
        const days = String(currentDate.getDate()).padStart(2, '0');
        const formattedDate = `${years}-${months}-${days}`;

        var isSalProcess = obj;

        var employmentTypeId = $('#EmploymentTypeID').val();

        var employeeCategoryId = $('#EmployeeCategoryID').val();

        var companyid = $('#CompanyID').val();

        var employeeId = $('#employeeText').val();

        var monthDate = $('#month').val();
        //const dateString = "2023-03-16";
        const year = monthDate.slice(0, 4); // "2023"
        const month = monthDate.slice(5, 7);

        var isdownload = obj;

        var urlEmpSalSumm = '@Url.Action("GetEmployeeSalarySummary","ReportsHR")';

        var searchEmpSalURL = urlEmpSalSumm + '?employeeCategoryId=' + employeeCategoryId + '&companyId=' + companyid + '&month=' + month + '&year=' + year + '&employeeId=' + employeeId + '&isDownload=' + isdownload + '&employmentTypeId=' + employmentTypeId + '&salaryDate=' + formattedDate + '&isSalProcess=' + isSalProcess;

        window.location.href = searchEmpSalURL;
    };


    function fnVerifySalary(obj) {

        let year = @year;
        let month = @month;
        let companyId = @companyID;
        let employeeId = obj.dataset.empid;
        let employeeCategoryId = @empCatId;
        const params = { year: year, month: month, companyId: companyId, employeeId: employeeId, employeeCategoryId: employeeCategoryId };
        let verifySalaryUrl = '@Url.Action("VerifySalary","ReportsHR")';
        $.ajax({
            type: 'post',
            url: verifySalaryUrl,
            data: params,
            dataType: 'json',
            success: function (data) {
                if (data.status) {
                    $("#EmployeeSummaryTable").load(window.location.href + " #EmployeeSummaryTable");
                    var test = Lobibox.notify('success', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: 'Employee salary verified successfully.',
                    });
                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: 'Unable to verify employee salary.'
                    });
                }
            },
            error: function (error) {
                laddaStop(ls);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: '@MessageHelper.Error'
                });
            }
        }).always(function () {
            hideloader();
        });
    @*   setTimeout(
            function () {
            //window.location.reload();
            //$('#confirmationModal').modal('hide');
            $("#EmployeeSummaryTable").load(window.location.href + " #EmployeeSummaryTable");
            //}, 1000); *@
                };

    function fnOpenNewEditTab(obj) {
        let editId = obj.dataset.editid;
        let month = obj.dataset.month;
        let year = obj.dataset.year;
        let companyId = obj.dataset.companyid;
        let employeeCategoryId = obj.dataset.employeecategoryid;

        var urlEditEmpSal = '@Url.Action("Edit","ReportsHR")';

        var finalUrl = urlEditEmpSal + '?editId=' + editId + '&month=' + month + '&year=' + year + '&companyId=' + companyId + '&employeeCategoryId=' + employeeCategoryId;
        var newWindow = window.open(finalUrl, '_blank');
        // Optionally focus on the new window
        if (newWindow) {
            newWindow.focus();
        }
    }
    //  Print Function
    function fnPrintSalary(obj) {
        alert('fnPrintSalary fn invoked.');
        let _id = $(obj).data('id');
        let _month = $(obj).data('month');
        let _year = $(obj).data('year');
        let _company = $(obj).data('company');
        let _category = $(obj).data('category');
        //let _empId = $(obj).data('key');

        var currentUrl = window.location.href;

        const index = currentUrl.indexOf('?');

        // If the target character is found, return the portion of the string before it
        if (index !== -1) {
            currentUrl = currentUrl.slice(0, index + 1); // +1 to include the target character
        }

        var newUrl = currentUrl.replace('/HR/ReportsHR/GetEmployeeSalarySummary?', '/ReportViewer/');
        let url = newUrl + 'ReportViewer/OnPostGetSalarySummaryReportHTML';
        let parameters = { employeeId: _id, month: _month, year: _year, companyId: _company, employeeCategoryId: _category };
        debugger;
        $.ajax({
            type: 'POST',
            url: url,
            data: parameters,
            dataType: 'json',
            success: function (data) {
                if (data.status) {
                    var newTab = window.open();
                    newTab.document.open();
                    newTab.document.write(data.data);
                    newTab.document.close();
                }
                else {
                    Lobibox.notify('error', {
                        pauseDelayOnHover: true,
                        size: 'mini',
                        icon: 'bx bx-check-circle',
                        continueDelayOnInactiveTab: false,
                        position: 'bottom right',
                        msg: 'Error to load report.'
                    });
                }
            },
            error: function (error) {
                laddaStop(l);
                Lobibox.notify('error', {
                    pauseDelayOnHover: true,
                    size: 'mini',
                    icon: 'bx bx-check-circle',
                    continueDelayOnInactiveTab: false,
                    position: 'bottom right',
                    msg: "@MessageHelper.Error"
                });
            }
        }).always(function () {
            hideLoader();
        });
    };

    function fnPrintSalarySleep(obj) {
        //alert('fnPrintSalary fn invoked.');
        let _id = $(obj).data('id');
        let _month = $(obj).data('month');
        let _year = $(obj).data('year');
        let _company = $(obj).data('company');
        let _category = $(obj).data('category');
        //let _empId = $(obj).data('key');

        var currentUrl = window.location.href;
        // debugger;
        //const index = currentUrl.indexOf('?');
        //alert("&EmployeeID=" + _id + "&Year=" + _year + "&Month=" + _month + "&CompanyID=" + _company + "&IsVerified=1");
        var Para = "&EmployeeID=" + _id + "&Year=" + _year + "&Month=" + _month + "&CompanyID=" + _company + "&IsVerified=1";
        var url = "http://sun260880-001-site2.atempurl.com/default.aspx?reportkey=1" + Para;
        window.open(url, "Report Platform","toolbar=0, location=0, directories=0, status=, menubar=0, scrollbars=yes, resizable=yes, copyhistory=yes, width=900, height=1200");
        
        // // If the target character is found, return the portion of the string before it
        // if (index !== -1) {
        //     currentUrl = currentUrl.slice(0, index + 1); // +1 to include the target character
        // }

        // var newUrl = currentUrl.replace('/HR/ReportsHR/GetEmployeeSalarySummary?', '/ReportViewer/');
        // let url = newUrl + 'ReportViewer/OnPostGetSalarySummaryReportHTML';
        //let parameters = { employeeId: _id, month: _month, year: _year, companyId: _company, employeeCategoryId: _category };
        // debugger;
        // $.ajax({
        //     type: 'POST',
        //     url: url,
        //     data: parameters,
        //     dataType: 'json',
        //     success: function (data) {
        //         if (data.status) {
        //             var newTab = window.open();
        //             newTab.document.open();
        //             newTab.document.write(data.data);
        //             newTab.document.close();
        //         }
        //         else {
        //             Lobibox.notify('error', {
        //                 pauseDelayOnHover: true,
        //                 size: 'mini',
        //                 icon: 'bx bx-check-circle',
        //                 continueDelayOnInactiveTab: false,
        //                 position: 'bottom right',
        //                 msg: 'Error to load report.'
        //             });
        //         }
        //     },
        //     error: function (error) {
        //         laddaStop(l);
        //         Lobibox.notify('error', {
        //             pauseDelayOnHover: true,
        //             size: 'mini',
        //             icon: 'bx bx-check-circle',
        //             continueDelayOnInactiveTab: false,
        //             position: 'bottom right',
        //             msg: "@MessageHelper.Error"
        //         });
        //     }
        // }).always(function () {
        //     hideLoader();
        // });
    };

    //// Print Function
    @*    function fnCalculateSalaryProcess() {
        var employeeCategoryId = $('#EmployeeCategoryID').val();



        var companyid = $('#CompanyID').val();

        var monthDate = $('#month').val();
        //const dateString = "2023-03-16";
        const year = monthDate.slice(0, 4); // "2023"
        const month = monthDate.slice(5, 7);

        alert('fnCalculateSalaryProcess() invoked');
        var urlSalaryProcess = '@Url.Action("RunSalaryProcess","ReportsHR")';

        var newUrlSalaryProcess = urlSalaryProcess + '?year=' + year + '&month=' + month + '&employmentTypeId=' + employmentTypeId + '&employeeCategoryId=' + employeeCategoryId+ '&salaryDate='+Date();
        alert(newUrlSalaryProcess);
        window.location.href = newUrlSalaryProcess;
        };*@
</script>


<!--    Important Code Block
@*@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="htts://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
    <script src="htts://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
    <link href="htts://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"
          rel="Stylesheet" type="text/css" />
    <script type="text/javascript">
        $(function () {
            $("#EmployeeName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Reports/GetEmployeeslist/',
                        data: { "EmpString": request.term },
                        type: "POST",
                        success: function (data) {
                            console.table(data);
                            if (data != false) {
                                response($.map(data, function (item) {
                                    return item;
                                }))
                            }
                        },
                        error: function (response) {
                            console.log("Error: " + response.responseText);
                        },
                        failure: function (response) {
                            console.log("Error: " + response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#EmployeeID").val(i.item.val);
                },
                minLength: 1
            });
        });
    </script>
}*@
-->
