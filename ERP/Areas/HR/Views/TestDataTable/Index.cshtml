@using Business.Entities.Employee;
@using Microsoft.AspNetCore.Identity
@inject UserManager<UserMasterMetadata> UserManager

@model IEnumerable<EmployeeMaster>

@{
    ViewData["Title"] = "Welcome!";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
    var userlogin = UserManager.GetUserAsync(User).Result;
    var roles = UserManager.GetRolesAsync(userlogin).Result;

}

<h1>@ViewData["Title"]</h1>

<p>A simple Visual Studio solution using jQuery DataTable with Server-Side processing using .NET, <a href="https://github.com/DavidSuescunPelegay/jQuery-datatable-server-side-net-core" target="_blank">more info here</a></p>

<form id="export-to-file-form" method="POST" enctype="application/x-www-form-urlencoded">
</form>

<div class="row">
    <div class="col-md-12">
        <table id="test-registers" class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.SrNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmployeeCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmployeeName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GenderText)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsActive)
                    </th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Styles{
    <link rel="stylesheet" href="~/lib/datatables/css/dataTables.bootstrap4.min.css" asp-append-version="true" />
}

@section Scripts{
    <script src="~/lib/momentjs/moment.min.js" asp-append-version="true"></script>
    <script src="~/lib/datatables/js/jquery.dataTables.min.js" asp-append-version="true"></script>
    <script src="~/lib/datetime-moment/datetime-moment.js" asp-append-version="true"></script>
    <script src="~/lib/datatables/js/dataTables.bootstrap4.js" asp-append-version="true"></script>

    <script src="~/lib/datatables-buttons/dataTables.buttons.min.js" asp-append-version="true"></script>

  @*  <script src="~/js/app.js" asp-append-version="true"></script>*@
}

<script type="text/javascript">
    var table;

    $(document).ready(function () {
        $.fn.dataTable.moment("DD/MM/YYYY HH:mm:ss");
        $.fn.dataTable.moment("DD/MM/YYYY");
        debugger;


        table = $("#test-registers").DataTable({
            // Design Assets
            stateSave: true,
            autoWidth: true,
            // ServerSide Setups
            processing: true,
            serverSide: true,
            // Paging Setups
            paging: true,
            // Custom Export Buttons
            dom: 'Bfrtip',
            buttons: [
                {
                    text: 'Excel',
                    action: function () {
                        exportToExcel();
                    }
                },
                {
                    text: 'CSV',
                    action: function () {
                        exportToCsv();
                    }
                },
                {
                    text: 'HTML',
                    action: function () {
                        exportToHtml();
                    }
                }
            ],
            // Searching Setups
            searching: { regex: true },
            // Ajax Filter
            ajax: {
                url: "/TestRegisters/LoadTable",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    return JSON.stringify(d);
                }
            },
            // Columns Setups
            columns: [
                { data: "SrNo" },
                { data: "EmployeeID" },
                { data: "EmployeeCode" },
                { data: "EmployeeName" },
                { data: "GenderText" },
                { data: "IsActive" },
                {
                    data: "creationDate",
                    render: function (data, type, row) {
                        // If display or filter data is requested, format the date
                        if (type === "display" || type === "filter") {
                            return moment(data).format("ddd DD/MM/YYYY HH:mm:ss");
                        }
                        // Otherwise the data type requested (`type`) is type detection or
                        // sorting data, for which we want to use the raw date value, so just return
                        // that, unaltered
                        return data;
                    }
                }
            ],
            // Column Definitions
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                {
                    targets: "trim",
                    render: function (data, type, full, meta) {
                        if (type === "display") {
                            data = strtrunc(data, 10);
                        }

                        return data;
                    }
                },
                { targets: "date-type", type: "date-eu" },
                {
                    targets: 10,
                    data: null,
                    defaultContent: "<a class='btn btn-link' role='button' href='#' onclick='edit(this)'>Edit</a>",
                    orderable: false
                },
            ]
        });
    });

    function strtrunc(str, num) {
        if (str.length > num) {
            return str.slice(0, num) + "...";
        }
        else {
            return str;
        }
    }

    function edit(rowContext) {
        if (table) {
            var data = table.row($(rowContext).parents("tr")).data();
            alert("Example showing row edit with id: " + data["id"] + ", name: " + data["name"]);
        }
    }

    function renderDownloadForm(format) {
        $('#export-to-file-form').attr('action', '/TestRegisters/ExportTable?format=' + format);

        // Get jQuery DataTables AJAX params
        var datatableParams = $('#test-registers').DataTable().ajax.params();

        // If the input exists, replace value, if not create the input and append to form
        if ($("#export-to-file-form input[name=dtParametersJson]").val()) {
            $('#export-to-file-form input[name=dtParametersJson]').val(datatableParams);
        } else {
            var searchModelInput = $("<input>")
                .attr("type", "hidden")
                .attr("name", "dtParametersJson")
                .val(datatableParams);

            $('#export-to-file-form').append(searchModelInput);
        }
    }

    function exportToExcel() {
        renderDownloadForm("excel");

        $("#export-to-file-form").submit();
    }

    function exportToCsv() {
        renderDownloadForm("csv");

        $("#export-to-file-form").submit();
    }

    function exportToHtml() {
        renderDownloadForm("html");

        $("#export-to-file-form").submit();
    }
</script>